// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.24.3
// source: communication/communication.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// mensaje de elecciones del jugador en el piso 1
type EleccionPiso1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdPlayer   int32  `protobuf:"varint,1,opt,name=id_player,json=idPlayer,proto3" json:"id_player,omitempty"`
	NamePlayer string `protobuf:"bytes,2,opt,name=name_player,json=namePlayer,proto3" json:"name_player,omitempty"`
	Choice     int32  `protobuf:"varint,3,opt,name=choice,proto3" json:"choice,omitempty"`
}

func (x *EleccionPiso1) Reset() {
	*x = EleccionPiso1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_communication_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EleccionPiso1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EleccionPiso1) ProtoMessage() {}

func (x *EleccionPiso1) ProtoReflect() protoreflect.Message {
	mi := &file_communication_communication_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EleccionPiso1.ProtoReflect.Descriptor instead.
func (*EleccionPiso1) Descriptor() ([]byte, []int) {
	return file_communication_communication_proto_rawDescGZIP(), []int{0}
}

func (x *EleccionPiso1) GetIdPlayer() int32 {
	if x != nil {
		return x.IdPlayer
	}
	return 0
}

func (x *EleccionPiso1) GetNamePlayer() string {
	if x != nil {
		return x.NamePlayer
	}
	return ""
}

func (x *EleccionPiso1) GetChoice() int32 {
	if x != nil {
		return x.Choice
	}
	return 0
}

// mensaje de elecciones del jugador en el piso 2
type EleccionPiso2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdPlayer   int32  `protobuf:"varint,1,opt,name=id_player,json=idPlayer,proto3" json:"id_player,omitempty"`
	NamePlayer string `protobuf:"bytes,2,opt,name=name_player,json=namePlayer,proto3" json:"name_player,omitempty"`
	Choice     string `protobuf:"bytes,3,opt,name=choice,proto3" json:"choice,omitempty"`
}

func (x *EleccionPiso2) Reset() {
	*x = EleccionPiso2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_communication_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EleccionPiso2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EleccionPiso2) ProtoMessage() {}

func (x *EleccionPiso2) ProtoReflect() protoreflect.Message {
	mi := &file_communication_communication_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EleccionPiso2.ProtoReflect.Descriptor instead.
func (*EleccionPiso2) Descriptor() ([]byte, []int) {
	return file_communication_communication_proto_rawDescGZIP(), []int{1}
}

func (x *EleccionPiso2) GetIdPlayer() int32 {
	if x != nil {
		return x.IdPlayer
	}
	return 0
}

func (x *EleccionPiso2) GetNamePlayer() string {
	if x != nil {
		return x.NamePlayer
	}
	return ""
}

func (x *EleccionPiso2) GetChoice() string {
	if x != nil {
		return x.Choice
	}
	return ""
}

// mensaje de elecciones del jugador en el piso 3
type EleccionPiso3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdPlayer   int32  `protobuf:"varint,1,opt,name=id_player,json=idPlayer,proto3" json:"id_player,omitempty"`
	NamePlayer string `protobuf:"bytes,2,opt,name=name_player,json=namePlayer,proto3" json:"name_player,omitempty"`
	Choice     int32  `protobuf:"varint,3,opt,name=choice,proto3" json:"choice,omitempty"`
}

func (x *EleccionPiso3) Reset() {
	*x = EleccionPiso3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_communication_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EleccionPiso3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EleccionPiso3) ProtoMessage() {}

func (x *EleccionPiso3) ProtoReflect() protoreflect.Message {
	mi := &file_communication_communication_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EleccionPiso3.ProtoReflect.Descriptor instead.
func (*EleccionPiso3) Descriptor() ([]byte, []int) {
	return file_communication_communication_proto_rawDescGZIP(), []int{2}
}

func (x *EleccionPiso3) GetIdPlayer() int32 {
	if x != nil {
		return x.IdPlayer
	}
	return 0
}

func (x *EleccionPiso3) GetNamePlayer() string {
	if x != nil {
		return x.NamePlayer
	}
	return ""
}

func (x *EleccionPiso3) GetChoice() int32 {
	if x != nil {
		return x.Choice
	}
	return 0
}

// mensaje de supervivencia del personaje
type Supervivencia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdPlayer int32 `protobuf:"varint,1,opt,name=id_player,json=idPlayer,proto3" json:"id_player,omitempty"`
	Vida     bool  `protobuf:"varint,2,opt,name=vida,proto3" json:"vida,omitempty"`
}

func (x *Supervivencia) Reset() {
	*x = Supervivencia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_communication_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Supervivencia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Supervivencia) ProtoMessage() {}

func (x *Supervivencia) ProtoReflect() protoreflect.Message {
	mi := &file_communication_communication_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Supervivencia.ProtoReflect.Descriptor instead.
func (*Supervivencia) Descriptor() ([]byte, []int) {
	return file_communication_communication_proto_rawDescGZIP(), []int{3}
}

func (x *Supervivencia) GetIdPlayer() int32 {
	if x != nil {
		return x.IdPlayer
	}
	return 0
}

func (x *Supervivencia) GetVida() bool {
	if x != nil {
		return x.Vida
	}
	return false
}

// confirmacion de golpe hacia el patriarca
type HitPatriarca struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GolpePatriarca bool `protobuf:"varint,1,opt,name=golpe_patriarca,json=golpePatriarca,proto3" json:"golpe_patriarca,omitempty"`
}

func (x *HitPatriarca) Reset() {
	*x = HitPatriarca{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_communication_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HitPatriarca) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitPatriarca) ProtoMessage() {}

func (x *HitPatriarca) ProtoReflect() protoreflect.Message {
	mi := &file_communication_communication_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitPatriarca.ProtoReflect.Descriptor instead.
func (*HitPatriarca) Descriptor() ([]byte, []int) {
	return file_communication_communication_proto_rawDescGZIP(), []int{4}
}

func (x *HitPatriarca) GetGolpePatriarca() bool {
	if x != nil {
		return x.GolpePatriarca
	}
	return false
}

// peticion general de un jugador
type Peticion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdPlayer   int32  `protobuf:"varint,1,opt,name=id_player,json=idPlayer,proto3" json:"id_player,omitempty"`
	NamePlayer string `protobuf:"bytes,2,opt,name=name_player,json=namePlayer,proto3" json:"name_player,omitempty"`
}

func (x *Peticion) Reset() {
	*x = Peticion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_communication_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peticion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peticion) ProtoMessage() {}

func (x *Peticion) ProtoReflect() protoreflect.Message {
	mi := &file_communication_communication_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peticion.ProtoReflect.Descriptor instead.
func (*Peticion) Descriptor() ([]byte, []int) {
	return file_communication_communication_proto_rawDescGZIP(), []int{5}
}

func (x *Peticion) GetIdPlayer() int32 {
	if x != nil {
		return x.IdPlayer
	}
	return 0
}

func (x *Peticion) GetNamePlayer() string {
	if x != nil {
		return x.NamePlayer
	}
	return ""
}

// peticion sobre las decisiones de cierta ronda aka piso de un jugador
type PeticionRonda struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdPlayer int32 `protobuf:"varint,1,opt,name=id_player,json=idPlayer,proto3" json:"id_player,omitempty"`
	Ronda    int32 `protobuf:"varint,2,opt,name=ronda,proto3" json:"ronda,omitempty"`
}

func (x *PeticionRonda) Reset() {
	*x = PeticionRonda{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_communication_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeticionRonda) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeticionRonda) ProtoMessage() {}

func (x *PeticionRonda) ProtoReflect() protoreflect.Message {
	mi := &file_communication_communication_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeticionRonda.ProtoReflect.Descriptor instead.
func (*PeticionRonda) Descriptor() ([]byte, []int) {
	return file_communication_communication_proto_rawDescGZIP(), []int{6}
}

func (x *PeticionRonda) GetIdPlayer() int32 {
	if x != nil {
		return x.IdPlayer
	}
	return 0
}

func (x *PeticionRonda) GetRonda() int32 {
	if x != nil {
		return x.Ronda
	}
	return 0
}

// Devolucion comun de peticiones de un jugador (podria usarse para todos remplazando las elecciones pero no estoy seguro)
type Decisiones struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdPlayer   int32  `protobuf:"varint,1,opt,name=id_player,json=idPlayer,proto3" json:"id_player,omitempty"`
	NamePlayer string `protobuf:"bytes,2,opt,name=name_player,json=namePlayer,proto3" json:"name_player,omitempty"`
	Choices    string `protobuf:"bytes,3,opt,name=choices,proto3" json:"choices,omitempty"`
}

func (x *Decisiones) Reset() {
	*x = Decisiones{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_communication_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Decisiones) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decisiones) ProtoMessage() {}

func (x *Decisiones) ProtoReflect() protoreflect.Message {
	mi := &file_communication_communication_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decisiones.ProtoReflect.Descriptor instead.
func (*Decisiones) Descriptor() ([]byte, []int) {
	return file_communication_communication_proto_rawDescGZIP(), []int{7}
}

func (x *Decisiones) GetIdPlayer() int32 {
	if x != nil {
		return x.IdPlayer
	}
	return 0
}

func (x *Decisiones) GetNamePlayer() string {
	if x != nil {
		return x.NamePlayer
	}
	return ""
}

func (x *Decisiones) GetChoices() string {
	if x != nil {
		return x.Choices
	}
	return ""
}

// monto actual de jugador
type MontoPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Monto int32 `protobuf:"varint,1,opt,name=monto,proto3" json:"monto,omitempty"`
}

func (x *MontoPlayer) Reset() {
	*x = MontoPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_communication_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MontoPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MontoPlayer) ProtoMessage() {}

func (x *MontoPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_communication_communication_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MontoPlayer.ProtoReflect.Descriptor instead.
func (*MontoPlayer) Descriptor() ([]byte, []int) {
	return file_communication_communication_proto_rawDescGZIP(), []int{8}
}

func (x *MontoPlayer) GetMonto() int32 {
	if x != nil {
		return x.Monto
	}
	return 0
}

// mensaje con proposito comun de confirmar, realmente puede ser lo que sea creo
type Confirmacion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Confirmacion string `protobuf:"bytes,1,opt,name=confirmacion,proto3" json:"confirmacion,omitempty"`
}

func (x *Confirmacion) Reset() {
	*x = Confirmacion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_communication_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Confirmacion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Confirmacion) ProtoMessage() {}

func (x *Confirmacion) ProtoReflect() protoreflect.Message {
	mi := &file_communication_communication_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Confirmacion.ProtoReflect.Descriptor instead.
func (*Confirmacion) Descriptor() ([]byte, []int) {
	return file_communication_communication_proto_rawDescGZIP(), []int{9}
}

func (x *Confirmacion) GetConfirmacion() string {
	if x != nil {
		return x.Confirmacion
	}
	return ""
}

// señal de partida para los jugadores
type Senal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partir bool `protobuf:"varint,1,opt,name=partir,proto3" json:"partir,omitempty"`
}

func (x *Senal) Reset() {
	*x = Senal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_communication_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Senal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Senal) ProtoMessage() {}

func (x *Senal) ProtoReflect() protoreflect.Message {
	mi := &file_communication_communication_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Senal.ProtoReflect.Descriptor instead.
func (*Senal) Descriptor() ([]byte, []int) {
	return file_communication_communication_proto_rawDescGZIP(), []int{10}
}

func (x *Senal) GetPartir() bool {
	if x != nil {
		return x.Partir
	}
	return false
}

var File_communication_communication_proto protoreflect.FileDescriptor

var file_communication_communication_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x0e, 0x45, 0x6c, 0x65, 0x63, 0x63, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x69, 0x73, 0x6f, 0x31, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x66, 0x0a, 0x0e, 0x45, 0x6c,
	0x65, 0x63, 0x63, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x69, 0x73, 0x6f, 0x32, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x69, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x22, 0x66, 0x0a, 0x0e, 0x45, 0x6c, 0x65, 0x63, 0x63, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x69, 0x73, 0x6f, 0x33, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x40, 0x0a, 0x0d, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x76, 0x69, 0x76, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x69, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x64, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x76, 0x69, 0x64, 0x61, 0x22, 0x38, 0x0a, 0x0d,
	0x68, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x72, 0x69, 0x61, 0x72, 0x63, 0x61, 0x12, 0x27, 0x0a,
	0x0f, 0x67, 0x6f, 0x6c, 0x70, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x72, 0x69, 0x61, 0x72, 0x63, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x67, 0x6f, 0x6c, 0x70, 0x65, 0x50, 0x61, 0x74,
	0x72, 0x69, 0x61, 0x72, 0x63, 0x61, 0x22, 0x48, 0x0a, 0x08, 0x70, 0x65, 0x74, 0x69, 0x63, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x22, 0x43, 0x0a, 0x0e, 0x70, 0x65, 0x74, 0x69, 0x63, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x6e,
	0x64, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6e, 0x64, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x72, 0x6f, 0x6e, 0x64, 0x61, 0x22, 0x64, 0x0a, 0x0a, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x0c, 0x6d,
	0x6f, 0x6e, 0x74, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x6e, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x6f, 0x22, 0x32, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x61, 0x63, 0x69, 0x6f, 0x6e, 0x22, 0x1f, 0x0a, 0x05, 0x53, 0x65, 0x6e, 0x61, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x74, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x72, 0x32, 0xb2, 0x06, 0x0a, 0x08, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x69, 0x73, 0x6f, 0x31, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6c, 0x65, 0x63, 0x63, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x69,
	0x73, 0x6f, 0x31, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x76, 0x65, 0x6e, 0x63, 0x69,
	0x61, 0x12, 0x4c, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x73,
	0x6f, 0x32, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x45, 0x6c, 0x65, 0x63, 0x63, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x69, 0x73, 0x6f,
	0x32, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x76, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x12,
	0x4c, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x73, 0x6f, 0x33,
	0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x45, 0x6c, 0x65, 0x63, 0x63, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x69, 0x73, 0x6f, 0x33, 0x1a,
	0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x68, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x72, 0x69, 0x61, 0x72, 0x63, 0x61, 0x12, 0x3f, 0x0a,
	0x0a, 0x49, 0x6e, 0x69, 0x63, 0x69, 0x6f, 0x50, 0x69, 0x73, 0x6f, 0x12, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x61,
	0x6c, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x12, 0x48,
	0x0a, 0x0b, 0x45, 0x73, 0x74, 0x61, 0x64, 0x6f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x76, 0x69, 0x76, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x1a, 0x1b, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x09, 0x44, 0x6f, 0x73, 0x68,
	0x4d, 0x6f, 0x6e, 0x74, 0x6f, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x65, 0x74, 0x69, 0x63, 0x69, 0x6f, 0x6e, 0x1a, 0x1b,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d,
	0x6f, 0x6e, 0x74, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0b, 0x44,
	0x6f, 0x73, 0x68, 0x41, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x65, 0x74, 0x69, 0x63,
	0x69, 0x6f, 0x6e, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x6f, 0x6e,
	0x12, 0x4b, 0x0a, 0x0f, 0x50, 0x65, 0x74, 0x69, 0x63, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x65, 0x74, 0x69, 0x63, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x6e,
	0x64, 0x61, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x48, 0x0a,
	0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x31, 0x12, 0x1d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6c, 0x65, 0x63,
	0x63, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x69, 0x73, 0x6f, 0x31, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x50, 0x32, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6c, 0x65, 0x63, 0x63, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x69, 0x73, 0x6f, 0x32, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x6f,
	0x6e, 0x12, 0x48, 0x0a, 0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x33, 0x12,
	0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x45, 0x6c, 0x65, 0x63, 0x63, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x69, 0x73, 0x6f, 0x33, 0x1a, 0x1b,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0x5a, 0x01, 0x2e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_communication_communication_proto_rawDescOnce sync.Once
	file_communication_communication_proto_rawDescData = file_communication_communication_proto_rawDesc
)

func file_communication_communication_proto_rawDescGZIP() []byte {
	file_communication_communication_proto_rawDescOnce.Do(func() {
		file_communication_communication_proto_rawDescData = protoimpl.X.CompressGZIP(file_communication_communication_proto_rawDescData)
	})
	return file_communication_communication_proto_rawDescData
}

var file_communication_communication_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_communication_communication_proto_goTypes = []interface{}{
	(*EleccionPiso1)(nil), // 0: communication.Eleccion_piso1
	(*EleccionPiso2)(nil), // 1: communication.Eleccion_piso2
	(*EleccionPiso3)(nil), // 2: communication.Eleccion_piso3
	(*Supervivencia)(nil), // 3: communication.supervivencia
	(*HitPatriarca)(nil),  // 4: communication.hit_patriarca
	(*Peticion)(nil),      // 5: communication.peticion
	(*PeticionRonda)(nil), // 6: communication.peticion_ronda
	(*Decisiones)(nil),    // 7: communication.Decisiones
	(*MontoPlayer)(nil),   // 8: communication.monto_player
	(*Confirmacion)(nil),  // 9: communication.confirmacion
	(*Senal)(nil),         // 10: communication.Senal
}
var file_communication_communication_proto_depIdxs = []int32{
	0,  // 0: communication.Director.DecisionPiso1:input_type -> communication.Eleccion_piso1
	1,  // 1: communication.Director.DecisionPiso2:input_type -> communication.Eleccion_piso2
	2,  // 2: communication.Director.DecisionPiso3:input_type -> communication.Eleccion_piso3
	10, // 3: communication.Director.InicioPiso:input_type -> communication.Senal
	3,  // 4: communication.Director.EstadoFinal:input_type -> communication.supervivencia
	5,  // 5: communication.Director.DoshMonto:input_type -> communication.peticion
	5,  // 6: communication.Director.DoshAumento:input_type -> communication.peticion
	6,  // 7: communication.Director.PeticionChoices:input_type -> communication.peticion_ronda
	0,  // 8: communication.Director.NameNodeP1:input_type -> communication.Eleccion_piso1
	1,  // 9: communication.Director.NameNodeP2:input_type -> communication.Eleccion_piso2
	2,  // 10: communication.Director.NameNodeP3:input_type -> communication.Eleccion_piso3
	3,  // 11: communication.Director.DecisionPiso1:output_type -> communication.supervivencia
	3,  // 12: communication.Director.DecisionPiso2:output_type -> communication.supervivencia
	4,  // 13: communication.Director.DecisionPiso3:output_type -> communication.hit_patriarca
	9,  // 14: communication.Director.InicioPiso:output_type -> communication.confirmacion
	9,  // 15: communication.Director.EstadoFinal:output_type -> communication.confirmacion
	8,  // 16: communication.Director.DoshMonto:output_type -> communication.monto_player
	9,  // 17: communication.Director.DoshAumento:output_type -> communication.confirmacion
	7,  // 18: communication.Director.PeticionChoices:output_type -> communication.Decisiones
	9,  // 19: communication.Director.NameNodeP1:output_type -> communication.confirmacion
	9,  // 20: communication.Director.NameNodeP2:output_type -> communication.confirmacion
	9,  // 21: communication.Director.NameNodeP3:output_type -> communication.confirmacion
	11, // [11:22] is the sub-list for method output_type
	0,  // [0:11] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_communication_communication_proto_init() }
func file_communication_communication_proto_init() {
	if File_communication_communication_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_communication_communication_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EleccionPiso1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_communication_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EleccionPiso2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_communication_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EleccionPiso3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_communication_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Supervivencia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_communication_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HitPatriarca); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_communication_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peticion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_communication_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeticionRonda); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_communication_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Decisiones); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_communication_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MontoPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_communication_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Confirmacion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_communication_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Senal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_communication_communication_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_communication_communication_proto_goTypes,
		DependencyIndexes: file_communication_communication_proto_depIdxs,
		MessageInfos:      file_communication_communication_proto_msgTypes,
	}.Build()
	File_communication_communication_proto = out.File
	file_communication_communication_proto_rawDesc = nil
	file_communication_communication_proto_goTypes = nil
	file_communication_communication_proto_depIdxs = nil
}
